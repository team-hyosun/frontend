name: Deploy Frontend Production
on:
  push:
    branches: ['master']
  workflow_dispatch: {}

concurrency:
  group: deploy-frontend-prod
  cancel-in-progress: true

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Upload project to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.PROD_EC2_HOST }}
          username: ${{ secrets.PROD_EC2_USER }}
          key: ${{ secrets.PROD_EC2_KEY }}
          source: '.'
          target: '/opt/pks/frontend'
          overwrite: true
          strip_components: 0
          debug: true
          timeout: 120s
          command_timeout: 120s

      - name: Deploy with Blue-Green Strategy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PROD_EC2_HOST }}
          username: ${{ secrets.PROD_EC2_USER }}
          key: ${{ secrets.PROD_EC2_KEY }}
          script_stop: true
          script: |
            set -euo pipefail
            cd /opt/pks/frontend

            # 스크립트 실행 권한 부여
            chmod +x deploy-blue-green.sh

            # 블루-그린 배포 실행
            ./deploy-blue-green.sh

            # 사용하지 않는 Docker 이미지 정리
            docker image prune -f

            echo "🎉 Blue-Green deployment completed successfully!"

      - name: Final Health Check
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PROD_EC2_HOST }}
          username: ${{ secrets.PROD_EC2_USER }}
          key: ${{ secrets.PROD_EC2_KEY }}
          script_stop: true
          script: |
            set -euo pipefail

            # 웹사이트 최종 응답 확인
            echo "🌐 Final website health check..."

            for i in {1..5}; do
              code=$(curl -sS -o /dev/null -w '%{http_code}' https://parkincare.com)
              if [ "$code" = "200" ] || [ "$code" = "304" ]; then
                echo "✅ Health check passed: HTTP $code (attempt $i/5)"
                break
              elif [ $i -eq 5 ]; then
                echo "❌ Health check failed: HTTP $code after 5 attempts"
                exit 1
              else
                echo "⏳ Health check attempt $i/5: HTTP $code, retrying in 3s..."
                sleep 3
              fi
            done

            # 현재 활성 환경 확인
            ACTIVE_PORT=$(sudo nginx -T 2>/dev/null | grep "server 127.0.0.1:300[12]" | grep -o "300[12]" || echo "unknown")
            if [ "$ACTIVE_PORT" = "3001" ]; then
              ACTIVE_ENV="BLUE"
            elif [ "$ACTIVE_PORT" = "3002" ]; then
              ACTIVE_ENV="GREEN"  
            else
              ACTIVE_ENV="UNKNOWN"
            fi

            echo "📊 Deployment Summary:"
            echo "   - Website Status: ✅ Healthy (HTTP $code)"
            echo "   - Active Environment: $ACTIVE_ENV (port $ACTIVE_PORT)"
            echo "   - Deployment Time: $(date)"
            echo ""
            echo "🚀 Deployment completed successfully!"
